index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
c("333333")==TRUE
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
load_all()
load_all()
# generate example databases
prepost_example()
# in this example we can connect to the synthetic data using
srv <- example_server()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
load_all()
# generate example databases
prepost_example()
# in this example we can connect to the synthetic data using
srv <- example_server()
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
x = obj
cohort <- gen_cohort(x)
cohort_atts1<-gen_attr(x, filter_ids=TRUE)
cohort_cms <- x@svr$MODELLING_SQL_AREA$New_Cambridge_Score %>%
dplyr::select(.data$nhs_number, .data$attribute_period, .data$segment) %>%
dplyr::filter(.data$nhs_number %in% !!x@nhs_number) %>%
icdb::run()
cohort_atts2<- cohort %>%
dplyr::left_join(cohort_atts1, by="nhs_number") %>%
dplyr::mutate(dplyr::across(c("age","sex","imd"),as.factor)) %>%
tidyr::pivot_longer(cols=c(.data$age, .data$sex, .data$imd), names_to="metric", values_to="value")
cohort_atts2<- cohort %>%
dplyr::left_join(cohort_atts1, by="nhs_number") %>%
dplyr::mutate(dplyr::across(c("age","sex","imd"),as.factor)) %>%
tidyr::pivot_longer(cols=c(.data$age, .data$sex, .data$imd), names_to="metric", values_to="value") %>%
dplyr::mutate(diff=abs(difftime(.data$index_event_time,.data$attribute_period,units="days")))
cohort_atts2<- cohort %>%
dplyr::left_join(cohort_atts1, by="nhs_number") %>%
dplyr::mutate(dplyr::across(c("age","sex","imd"),as.factor)) %>%
tidyr::pivot_longer(cols=c(.data$age, .data$sex, .data$imd), names_to="metric", values_to="value")
View(cohort_atts2)
View(cohort_atts1)
lubridate::as_datetime(
stats::runif(n,
as.numeric(as.POSIXct(lubridate::ymd("2018-1-1"))),
as.numeric(as.POSIXct(lubridate::ymd("2020-1-1")))))
load_all()
# generate example databases
prepost_example()
# in this example we can connect to the synthetic data using
srv <- example_server()
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
x=obj
View(cohort)
View(cohort_atts1)
View(cohort_atts2)
cohort_atts1<-gen_attr(x, filter_ids=TRUE)
View(cohort_atts1)
View(cohort)
atts <- x@svr$MODELLING_SQL_AREA$primary_care_attributes %>%
dplyr::select(.data$nhs_number,.data$age,.data$sex,.data$lsoa,.data$attribute_period) %>%
{if(filter_ids) dplyr::filter(., .data$nhs_number %in% !!x@nhs_number) else .} %>%
icdb::run()
filter_ids=FALSE
atts <- x@svr$MODELLING_SQL_AREA$primary_care_attributes %>%
dplyr::select(.data$nhs_number,.data$age,.data$sex,.data$lsoa,.data$attribute_period) %>%
{if(filter_ids) dplyr::filter(., .data$nhs_number %in% !!x@nhs_number) else .} %>%
icdb::run()
View(atts)
srv$MODELLING_SQL_AREA$primary_care_attributes$attribute_period
srv$MODELLING_SQL_AREA$primary_care_attributes
load_all()
# generate example databases
prepost_example()
# in this example we can connect to the synthetic data using
srv <- example_server()
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
srv$MODELLING_SQL_AREA$primary_care_attributes
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
x=obj
cohort<- data.frame("nhs_number"       = x@nhs_number,
"index_event_time" = x@index_event_time) %>%
dplyr::mutate(instance_id=1:nrow(.))
View(cohort)
cohort_atts1<-gen_attr(x, filter_ids=TRUE)
View(cohort_atts1)
cohort_cms <- x@svr$MODELLING_SQL_AREA$New_Cambridge_Score %>%
dplyr::select(.data$nhs_number, .data$attribute_period, .data$segment) %>%
dplyr::filter(.data$nhs_number %in% !!x@nhs_number) %>%
icdb::run()
View(cohort_cms)
cohort_atts2<- cohort %>%
dplyr::left_join(cohort_atts1, by="nhs_number") %>%
dplyr::mutate(dplyr::across(c("age","sex","imd"),as.factor)) %>%
tidyr::pivot_longer(cols=c(.data$age, .data$sex, .data$imd), names_to="metric", values_to="value") %>%
dplyr::mutate(diff=abs(difftime(.data$index_event_time,.data$attribute_period,units="days")))
cohort_atts2<- cohort %>%
dplyr::left_join(cohort_atts1, by="nhs_number") %>%
dplyr::mutate(dplyr::across(c("age","sex","imd"),as.factor)) %>%
tidyr::pivot_longer(cols=c(.data$age, .data$sex, .data$imd), names_to="metric", values_to="value") %>%
dplyr::mutate(diff=abs(difftime(.data$index_event_time,.data$attribute_period,units="days"))) %>%
dplyr::group_by(.data$instance_id,.data$metric) %>%
dplyr::filter(!is.na(.data$value)) %>%
dplyr::arrange(diff) %>%
dplyr::slice(1) %>%
tidyr::pivot_wider(names_from=.data$metric, values_from=.data$value) %>%
dplyr::select(-c(.data$attribute_period, .data$diff)) %>%
dplyr::left_join(cohort_cms,by="nhs_number") %>%
dplyr::mutate(diff=abs(difftime(.data$index_event_time, .data$attribute_period, units="days"))) %>%
dplyr::group_by(.data$instance_id) %>%
dplyr::filter(!is.na(.data$segment)) %>%
dplyr::arrange(.data$diff) %>%
dplyr::slice(1) %>%
dplyr::select(-c(.data$attribute_period, .data$diff)) %>%
na.omit() %>%
dplyr::filter(.data$sex %in% c("Male","Female")) %>%
dplyr::ungroup() %>%
dplyr::select(.data$nhs_number, .data$instance_id, .data$age, .data$imd, .data$sex, .data$segment) %>%
dplyr::mutate(grp="Patients in cohort")
View(cohort_atts2)
cohort_atts2 <- cohort_atts(x)
popn_atts2 <- popn_atts(x)
descr<-rbind(cohort_atts2 %>% dplyr::select(-c(nhs_number,instance_id)), popn_atts2) %>%
dplyr::mutate(grp=factor(.data$grp,levels=c("Patients in cohort","General BNSSG population")))
View(cohort_atts2)
View(popn_atts2)
##########
# for general popn
popn_atts1<-gen_attr(x, filter_ids=FALSE)
popn_cms <- x@svr$MODELLING_SQL_AREA$New_Cambridge_Score %>%
dplyr::select(.data$nhs_number, .data$attribute_period, .data$segment) %>%
dplyr::filter(.data$attribute_period == max(.data$attribute_period, na.rm=TRUE)) %>%
dplyr::select(-.data$attribute_period) %>%
icdb::run()
date_y     <- sample(2018:2020, size=n, replace = TRUE)
date_m     <- sample(1:12, size=n, replace = TRUE)
date_str   <- paste0(date_y,"-",date_m,"-1",)
date_str   <- paste0(date_y,"-",date_m,"-1")
attribute_period <- as.POSIXct(lubridate::ymd(date_str)) %>%
as.character()
attribute_period
date_y     <- sample(2018:2020, size=n, replace = TRUE)
date_m     <- sample(1:12, size=n, replace = TRUE)
date_str   <- paste0(date_y,"-",date_m,"-1 00:00:00")
attribute_period <- as.POSIXct(lubridate::ymd_hms(date_str)) %>%
as.character()
attribute_period
# generate example databases
prepost_example()
# in this example we can connect to the synthetic data using
srv <- example_server()
load_all()
# in this example we can connect to the synthetic data using
srv <- example_server()
# generate example databases
prepost_example()
# in this example we can connect to the synthetic data using
srv <- example_server()
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
x=obj
obj
x=obj
popn_cms <- x@svr$MODELLING_SQL_AREA$New_Cambridge_Score %>%
dplyr::select(.data$nhs_number, .data$attribute_period, .data$segment) %>%
dplyr::filter(.data$attribute_period == max(.data$attribute_period, na.rm=TRUE)) %>%
dplyr::select(-.data$attribute_period) %>%
icdb::run()
View(popn_cms)
popn_atts2<-popn_atts1 %>%
dplyr::left_join(popn_cms,by="nhs_number") %>%
dplyr::select(-.data$nhs_number) %>%
dplyr::mutate(grp="General BNSSG population") %>%
dplyr::mutate(dplyr::across(c("age","sex","imd"),as.factor)) %>%
dplyr::mutate(sex=stringr::str_to_title(.data$sex)) %>%
dplyr::filter(.data$sex %in% c("Male","Female")) %>%
na.omit()
popn_atts2 <- popn_atts(x)
cohort_atts2 <- cohort_atts(x)
View(cohort_atts2)
View(popn_atts2)
View(cohort_atts2)
cohort <- gen_cohort(x)
cohort_atts1<-gen_attr(x, filter_ids=TRUE)
cohort_cms <- x@svr$MODELLING_SQL_AREA$New_Cambridge_Score %>%
dplyr::select(.data$nhs_number, .data$attribute_period, .data$segment) %>%
dplyr::filter(.data$nhs_number %in% !!x@nhs_number) %>%
icdb::run()
View(cohort_cms)
View(cohort_atts2)
popn_atts1<-gen_attr(x, filter_ids=FALSE)
##########
# for general popn
popn_atts1<-gen_attr(x, filter_ids=FALSE)
View(popn_atts1)
library(devtools)
library(PrePost)
# generate example databases
prepost_example()
load_all()
document()
document()
load_all()
library(PrePost)
# generate example databases
prepost_example()
gen_example_cohort("cohort.db")
gen_example_imd_lsoa("Analyst_SQL_Area.db")
load_all()
library(PrePost)
# generate example databases
prepost_example()
library(PrePost)
library(dplyr)
library(icdb)
# connect to ICB server using this
# srv <- icdb::server("[data_source_name]"])  #see ICDB documentation for details
# in this example we can connect to the synthetic data using
srv <- example_server()
ids  <- srv$cohort$COHORT_SYNTH %>% select(nhs_number) %>% pull()
date <- srv$cohort$COHORT_SYNTH %>% select(index_event_time) %>% pull() %>% as.POSIXct()
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
srv$MODELLING_SQL_AREA$swd_attribute
srv$MODELLING_SQL_AREA$swd_attribute %>% select(age) %>% run()
srv$MODELLING_SQL_AREA$swd_attribute %>% select(age) %>% run() %>% max()
srv$MODELLING_SQL_AREA$swd_attribute %>% select(age) %>% run() %>% min()
srv$MODELLING_SQL_AREA$primary_care_attributes %>% select(age) %>% run() %>% min()
seed = 1
n=1000
stopifnot(n >= 1)
## Create the gendata/ folder if it does not exist
if (!dir.exists("gendata"))
{
dir.create("gendata")
}
## Set the seed so that subsequent operations are repeatable
set.seed(seed)
## Generate a random NHS number (not the real format)
nhs_number <- replicate(n, random_nhs_number())
age        <- sample(18:100, size=n, replace = TRUE)
sex        <- sample(c("Male","Female"), size=n, replace = TRUE)
lsoa       <- sample(get_some_lsoa_codes(), size=n, replace = TRUE)
## Make the data frame with the episode data
tbl <- tibble::tibble(nhs_number = nhs_number,
age = age,
sex = sex,
lsoa = lsoa)
View(tbl)
x=srv
print(paste0("Running descriptive summary of cohort..."),quote=FALSE)
cohort_atts2 <- cohort_atts(x)
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
x=obj
print(paste0("Running descriptive summary of cohort..."),quote=FALSE)
cohort_atts2 <- cohort_atts(x)
popn_atts2 <- popn_atts(x)
##########
# join
descr<-rbind(cohort_atts2 %>% dplyr::select(-c(nhs_number,instance_id)), popn_atts2) %>%
dplyr::mutate(grp=factor(.data$grp,levels=c("Patients in cohort","General BNSSG population")))
descr_age<-descr %>%
dplyr::mutate(age=as.numeric(.data$age)) %>%
dplyr::mutate(age=dplyr::case_when(.data$age<10 ~'0-9',
.data$age>=10 & .data$age<20 ~'-19',
.data$age>=20 & .data$age<30  ~'20s',
.data$age>=30 & .data$age<40  ~'30s',
.data$age>=40 & .data$age<50  ~'40s',
.data$age>=50 & .data$age<60  ~'50s',
.data$age>=60 & .data$age<70  ~'60s',
.data$age>=70 & .data$age<80  ~'70s',
.data$age>=80 & .data$age<90  ~'80s',
TRUE  ~'90+')) %>%
dplyr::group_by(.data$grp,.data$age) %>%
dplyr::summarise(prop=dplyr::n()) %>%
dplyr::group_by(.data$grp) %>%
dplyr::mutate(prop=.data$prop/sum(.data$prop)) %>%
dplyr::mutate(metric="Age") %>%
dplyr::rename("xval"="age") %>%
dplyr::mutate(xval=factor(.data$xval,levels=c('0-9','-19','20s','30s','40s',
'50s','60s','70s','80s','90+')))
View(descr_age)
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
x=obj
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
print(paste0("Running descriptive summary of cohort..."),quote=FALSE)
cohort_atts2 <- cohort_atts(x)
popn_atts2 <- popn_atts(x)
##########
# join
descr<-rbind(cohort_atts2 %>% dplyr::select(-c(nhs_number,instance_id)), popn_atts2) %>%
dplyr::mutate(grp=factor(.data$grp,levels=c("Patients in cohort","General BNSSG population")))
descr_age<-descr %>%
dplyr::mutate(age=as.numeric(.data$age)) %>%
dplyr::mutate(age=dplyr::case_when(.data$age<10 ~'0-9',
.data$age>=10 & .data$age<20  ~'10s',
.data$age>=20 & .data$age<30  ~'20s',
.data$age>=30 & .data$age<40  ~'30s',
.data$age>=40 & .data$age<50  ~'40s',
.data$age>=50 & .data$age<60  ~'50s',
.data$age>=60 & .data$age<70  ~'60s',
.data$age>=70 & .data$age<80  ~'70s',
.data$age>=80 & .data$age<90  ~'80s',
TRUE  ~'90+')) %>%
dplyr::group_by(.data$grp,.data$age) %>%
dplyr::summarise(prop=dplyr::n()) %>%
dplyr::group_by(.data$grp) %>%
dplyr::mutate(prop=.data$prop/sum(.data$prop)) %>%
dplyr::mutate(metric="Age") %>%
dplyr::rename("xval"="age") %>%
dplyr::mutate(xval=factor(.data$xval,levels=c('0-9','10s','20s','30s','40s',
'50s','60s','70s','80s','90+')))
View(descr_age)
View(descr)
View(popn_atts2)
popn_atts2 <- popn_atts(x)
atts <- x@svr$MODELLING_SQL_AREA$swd_attribute %>%
dplyr::select(.data$nhs_number,.data$age,.data$sex,.data$lsoa) %>%
dplyr::filter(.data$nhs_number %in% !!x@nhs_number) %>%
icdb::run()
View(atts)
imd <- x@svr$Analyst_SQL_Area$tbl_BNSSG_Datasets_LSOA_IMD_2019 %>%
dplyr::select(imd  = .data$`Index of Multiple Deprivation (IMD) Decile`,
lsoa = .data$`LSOA Code`) %>%
dplyr::filter(.data$lsoa %in% !!atts$lsoa) %>%
icdb::run()
popn_atts1<-atts %>%
dplyr::mutate(lsoa=toupper(.data$lsoa)) %>%
dplyr::left_join(imd, by="lsoa") %>%
dplyr::select(-.data$lsoa)
View(popn_atts1)
popn_cms <- x@svr$MODELLING_SQL_AREA$New_Cambridge_Score %>%
dplyr::select(.data$nhs_number, .data$attribute_period, .data$segment) %>%
dplyr::filter(.data$attribute_period == max(.data$attribute_period, na.rm=TRUE)) %>%
dplyr::select(-.data$attribute_period) %>%
icdb::run()
View(popn_cms)
date_y     <- sample(2018:2020, size=n, replace = TRUE)
date_m     <- sample(1:12, size=n, replace = TRUE)
date_str   <- paste0(date_y,"-",date_m,"-1 00:00:00")
attribute_period <- as.POSIXct(lubridate::ymd_hms(date_str))
max(attribute_period)
date_y     <- sample(2018:2020, size=n, replace = TRUE)
date_m     <- sample(1:12, size=n, replace = TRUE)
date_str   <- paste0(date_y,"-",date_m,"-1 00:00:00")
attribute_period <- as.POSIXct(lubridate::ymd_hms(date_str))
attribute_period <- rep(max(attribute_period), length(attribute_period))
# generate example databases
prepost_example()
library(PrePost)
library(dplyr)
library(icdb)
# connect to ICB server using this
# srv <- icdb::server("[data_source_name]"])  #see ICDB documentation for details
# in this example we can connect to the synthetic data using
srv <- example_server()
ids  <- srv$cohort$COHORT_SYNTH %>% select(nhs_number) %>% pull()
date <- srv$cohort$COHORT_SYNTH %>% select(index_event_time) %>% pull() %>% as.POSIXct()
load_all()
obj <- PrePost(nhs_number       = ids,
index_event_time = date,
window_pre       = 31,
window_post      = 30,
window_units     = "days",
svr              = example_server())
run_descriptives(obj)
plot <- run_descriptives(obj)
print(plot)
check()
check(0)
check()
use_package("DBI")
use_package("RSQLite")
use_package("tibble")
check()
install()
library(PrePost)
library(PrePost)
